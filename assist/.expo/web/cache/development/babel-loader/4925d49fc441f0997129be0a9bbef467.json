{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/SwipeCards.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SwipeCards from \"react-native-swipe-cards\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.card, {\n          backgroundColor: this.props.backgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, this.props.text));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nvar NoMoreCards = function (_Component) {\n  _inherits(NoMoreCards, _Component);\n\n  var _super2 = _createSuper(NoMoreCards);\n\n  function NoMoreCards(props) {\n    _classCallCheck(this, NoMoreCards);\n\n    return _super2.call(this, props);\n  }\n\n  _createClass(NoMoreCards, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.noMoreCardsText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"No more cards\"));\n    }\n  }]);\n\n  return NoMoreCards;\n}(Component);\n\nvar _default = function (_React$Component2) {\n  _inherits(_default, _React$Component2);\n\n  var _super3 = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super3.call(this, props);\n    _this.state = {\n      cards: [{\n        text: \"Tomato\",\n        backgroundColor: \"red\"\n      }, {\n        text: \"Aubergine\",\n        backgroundColor: \"purple\"\n      }, {\n        text: \"Courgette\",\n        backgroundColor: \"green\"\n      }, {\n        text: \"Blueberry\",\n        backgroundColor: \"blue\"\n      }, {\n        text: \"Umm...\",\n        backgroundColor: \"cyan\"\n      }, {\n        text: \"orange\",\n        backgroundColor: \"orange\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleYup\",\n    value: function handleYup(card) {\n      console.log(\"Yup for \" + card.text);\n    }\n  }, {\n    key: \"handleNope\",\n    value: function handleNope(card) {\n      console.log(\"Nope for \" + card.text);\n    }\n  }, {\n    key: \"handleMaybe\",\n    value: function handleMaybe(card) {\n      console.log(\"Maybe for \" + card.text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SwipeCards, {\n        cards: this.state.cards,\n        renderCard: function renderCard(cardData) {\n          return React.createElement(Card, _extends({}, cardData, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 35\n            }\n          }));\n        },\n        renderNoMoreCards: function renderNoMoreCards() {\n          return React.createElement(NoMoreCards, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 34\n            }\n          });\n        },\n        handleYup: this.handleYup,\n        handleNope: this.handleNope,\n        handleMaybe: this.handleMaybe,\n        hasMaybeAction: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };\nvar styles = StyleSheet.create({\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 300,\n    height: 300\n  },\n  noMoreCardsText: {\n    fontSize: 22\n  }\n});","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/SwipeCards.js"],"names":["React","Component","SwipeCards","Card","props","styles","card","backgroundColor","text","NoMoreCards","noMoreCardsText","state","cards","console","log","cardData","handleYup","handleNope","handleMaybe","StyleSheet","create","justifyContent","alignItems","width","height","fontSize"],"mappings":"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","sourcesContent":["// SwipeCards.js\n\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\n\nimport SwipeCards from \"react-native-swipe-cards\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View\n        style={[styles.card, { backgroundColor: this.props.backgroundColor }]}\n      >\n        <Text>{this.props.text}</Text>\n      </View>\n    );\n  }\n}\n\nclass NoMoreCards extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View>\n        <Text style={styles.noMoreCardsText}>No more cards</Text>\n      </View>\n    );\n  }\n}\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [\n        { text: \"Tomato\", backgroundColor: \"red\" },\n        { text: \"Aubergine\", backgroundColor: \"purple\" },\n        { text: \"Courgette\", backgroundColor: \"green\" },\n        { text: \"Blueberry\", backgroundColor: \"blue\" },\n        { text: \"Umm...\", backgroundColor: \"cyan\" },\n        { text: \"orange\", backgroundColor: \"orange\" },\n      ],\n    };\n  }\n\n  handleYup(card) {\n    console.log(`Yup for ${card.text}`);\n  }\n  handleNope(card) {\n    console.log(`Nope for ${card.text}`);\n  }\n  handleMaybe(card) {\n    console.log(`Maybe for ${card.text}`);\n  }\n  render() {\n    // If you want a stack of cards instead of one-per-one view, activate stack mode\n    // stack={true}\n    return (\n      <SwipeCards\n        cards={this.state.cards}\n        renderCard={(cardData) => <Card {...cardData} />}\n        renderNoMoreCards={() => <NoMoreCards />}\n        handleYup={this.handleYup}\n        handleNope={this.handleNope}\n        handleMaybe={this.handleMaybe}\n        hasMaybeAction\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 300,\n    height: 300,\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}