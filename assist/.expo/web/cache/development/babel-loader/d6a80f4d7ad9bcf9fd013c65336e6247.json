{"ast":null,"code":"import * as d3 from \"d3\";\nexport function sblingLine(d, allNodes) {\n  var start = allNodes.filter(function (v) {\n    if (d.source.id == v.id) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  var end = allNodes.filter(function (v) {\n    if (d.target.id == v.id) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  var linedata = [{\n    x: start[0].x,\n    y: start[0].y\n  }, {\n    x: end[0].x,\n    y: end[0].y\n  }];\n  var fun = d3.svg.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  }).interpolate(\"linear\");\n  return fun(linedata);\n}","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/node_modules/react-native-d3-tree-graph/siblingUtil.js"],"names":["d3","sblingLine","d","allNodes","start","filter","v","source","id","end","target","linedata","x","y","fun","svg","line","interpolate"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,OAAO,SAASC,UAAT,CAAoBC,CAApB,EAAsBC,QAAtB,EAAgC;AAEnC,MAAIC,KAAK,GAAGD,QAAQ,CAACE,MAAT,CAAgB,UAAUC,CAAV,EAAa;AACrC,QAAIJ,CAAC,CAACK,MAAF,CAASC,EAAT,IAAeF,CAAC,CAACE,EAArB,EAAyB;AACrB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GANW,CAAZ;AAQA,MAAIC,GAAG,GAAGN,QAAQ,CAACE,MAAT,CAAgB,UAAUC,CAAV,EAAa;AACnC,QAAIJ,CAAC,CAACQ,MAAF,CAASF,EAAT,IAAeF,CAAC,CAACE,EAArB,EAAyB;AACrB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GANS,CAAV;AAQA,MAAIG,QAAQ,GAAG,CAAC;AACZC,IAAAA,CAAC,EAAER,KAAK,CAAC,CAAD,CAAL,CAASQ,CADA;AAEZC,IAAAA,CAAC,EAAET,KAAK,CAAC,CAAD,CAAL,CAASS;AAFA,GAAD,EAGZ;AACCD,IAAAA,CAAC,EAAEH,GAAG,CAAC,CAAD,CAAH,CAAOG,CADX;AAECC,IAAAA,CAAC,EAAEJ,GAAG,CAAC,CAAD,CAAH,CAAOI;AAFX,GAHY,CAAf;AAOA,MAAIC,GAAG,GAAGd,EAAE,CAACe,GAAH,CAAOC,IAAP,GAAcJ,CAAd,CAAgB,UAAUV,CAAV,EAAa;AACnC,WAAOA,CAAC,CAACU,CAAT;AACH,GAFS,EAEPC,CAFO,CAEL,UAAUX,CAAV,EAAa;AACd,WAAOA,CAAC,CAACW,CAAT;AACH,GAJS,EAIPI,WAJO,CAIK,QAJL,CAAV;AAKA,SAAOH,GAAG,CAACH,QAAD,CAAV;AACH","sourcesContent":["import * as d3 from \"d3\";\n\nexport function sblingLine(d,allNodes) {\n    //start point\n    var start = allNodes.filter(function (v) {\n        if (d.source.id == v.id) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n    //end point\n    var end = allNodes.filter(function (v) {\n        if (d.target.id == v.id) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n    //define teh start coordinate and end co-ordinate\n    var linedata = [{\n        x: start[0].x,\n        y: start[0].y\n    }, {\n        x: end[0].x,\n        y: end[0].y\n    }];\n    var fun = d3.svg.line().x(function (d) {\n        return d.x;\n    }).y(function (d) {\n        return d.y;\n    }).interpolate(\"linear\");\n    return fun(linedata);\n}"]},"metadata":{},"sourceType":"module"}