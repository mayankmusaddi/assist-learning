{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/node_modules/react-native-d3-tree-graph/DeployNodes.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { tx, ty, kx, ky } from \"./CoordinatePoints\";\nimport Svg, { G, Text, Rect, Image } from 'react-native-svg';\nexport function DeployNodes(nodes) {\n  var rectNodes = _.map(nodes, function (n, index) {\n    var text, imageWidth, imageHeight;\n    imageWidth = n.nodeImageStyle ? n.nodeImageStyle.imageWidth : 50;\n    imageHeight = n.nodeImageStyle ? n.nodeImageStyle.imageHeight : 50;\n\n    if (n.name) {\n      text = React.createElement(Text, _extends({\n        x: tx(n),\n        y: ty(n) + imageHeight\n      }, n.nodeTextStyle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 40\n        }\n      }), n.name);\n      return React.createElement(G, {\n        key: 'tree_' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 42\n        }\n      }, React.createElement(Image, _extends({\n        x: kx(n),\n        y: ky(n),\n        width: imageWidth,\n        height: imageHeight\n      }, n.nodeImageStyle, n.imageUrl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 43\n        }\n      })), text);\n    }\n  });\n\n  return rectNodes;\n}","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/node_modules/react-native-d3-tree-graph/DeployNodes.js"],"names":["React","Component","_","tx","ty","kx","ky","Svg","G","Text","Rect","Image","DeployNodes","nodes","rectNodes","map","n","index","text","imageWidth","imageHeight","nodeImageStyle","name","nodeTextStyle","imageUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB;AACA,OAAOC,GAAP,IAAaC,CAAb,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAyC,kBAAzC;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EACP;AACE,MAAMC,SAAS,GAAMZ,CAAC,CAACa,GAAF,CAAMF,KAAN,EAAY,UAAUG,CAAV,EAAYC,KAAZ,EAAmB;AACxB,QAAIC,IAAJ,EAAUC,UAAV,EAAsBC,WAAtB;AACAD,IAAAA,UAAU,GAAGH,CAAC,CAACK,cAAF,GAAmBL,CAAC,CAACK,cAAF,CAAiBF,UAApC,GAAiD,EAA9D;AACAC,IAAAA,WAAW,GAAGJ,CAAC,CAACK,cAAF,GAAmBL,CAAC,CAACK,cAAF,CAAiBD,WAApC,GAAkD,EAAhE;;AACA,QAAGJ,CAAC,CAACM,IAAL,EACA;AACEJ,MAAAA,IAAI,GAAG,oBAAC,IAAD;AACE,QAAA,CAAC,EAAEf,EAAE,CAACa,CAAD,CADP;AACY,QAAA,CAAC,EAAEZ,EAAE,CAACY,CAAD,CAAF,GAAQI;AADvB,SACwCJ,CAAC,CAACO,aAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAC4DP,CAAC,CAACM,IAD9D,CAAP;AAEC,aAAQ,oBAAC,CAAD;AAAG,QAAA,GAAG,EAAE,UAAUL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACI,QAAA,CAAC,EAAEZ,EAAE,CAACW,CAAD,CADT;AAEI,QAAA,CAAC,EAAEV,EAAE,CAACU,CAAD,CAFT;AAGI,QAAA,KAAK,EAAEG,UAHX;AAII,QAAA,MAAM,EAAEC;AAJZ,SAKQJ,CAAC,CAACK,cALV,EAMQL,CAAC,CAACQ,QANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,EASEN,IATF,CAAR;AAWF;AACF,GApBN,CAArB;;AAqBA,SAAOJ,SAAP;AACD","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash'\nimport { tx, ty, kx, ky } from './CoordinatePoints'\nimport Svg,{ G, Text, Rect, Image } from 'react-native-svg'\n\nexport function DeployNodes(nodes)\n{\n  const rectNodes =    _.map(nodes,function (n,index) {\n                              let text, imageWidth, imageHeight;\n                              imageWidth = n.nodeImageStyle ? n.nodeImageStyle.imageWidth : 50\n                              imageHeight = n.nodeImageStyle ? n.nodeImageStyle.imageHeight : 50\n                              if(n.name)\n                              {\n                                text = <Text\n                                         x={tx(n)} y={ty(n) + imageHeight} {...n.nodeTextStyle} >{ n.name }</Text>\n                                 return (<G key={'tree_' + index}>\n                                          <Image\n                                              x={kx(n)}\n                                              y={ky(n)}\n                                              width={imageWidth}\n                                              height={imageHeight}\n                                              {...n.nodeImageStyle}\n                                              {...n.imageUrl}\n                                          />\n                                          {text}\n                                      </G>)\n                              }\n                            })\n  return rectNodes\n}\n"]},"metadata":{},"sourceType":"module"}