{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextProps } from \"react-native-web/dist/index\";\nimport { renderStyledText } from \"./renderer\";\n\nvar StyledText = function (_React$PureComponent) {\n  _inherits(StyledText, _React$PureComponent);\n\n  var _super = _createSuper(StyledText);\n\n  function StyledText() {\n    _classCallCheck(this, StyledText);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StyledText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          textStyles = _this$props.textStyles,\n          textProps = _objectWithoutProperties(_this$props, [\"children\", \"textStyles\"]);\n\n      return renderStyledText(children, textStyles, textProps);\n    }\n  }]);\n\n  return StyledText;\n}(React.PureComponent);\n\nexport default StyledText;","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/node_modules/react-native-styled-text/StyledText/index.js"],"names":["React","TextProps","renderStyledText","StyledText","props","children","textStyles","textProps","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;SACqBC,S;AAErB,SAASC,gBAAT;;IAOMC,U;;;;;;;;;;;;;6BACK;AAAA,wBACwC,KAAKC,KAD7C;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UAC0BC,SAD1B;;AAEP,aAAOL,gBAAgB,CAACG,QAAD,EAAWC,UAAX,EAAuBC,SAAvB,CAAvB;AACD;;;;EAJsBP,KAAK,CAACQ,a;;AAO/B,eAAeL,UAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, TextProps } from 'react-native';\n\nimport { renderStyledText } from './renderer';\n\ntype Props = TextProps & {\n  children: String,\n  textStyles: StyleSheet.StyleSheet,\n}\n\nclass StyledText extends React.PureComponent<Props> {\n  render() {\n    const { children, textStyles, ...textProps } = this.props;\n    return renderStyledText(children, textStyles, textProps);\n  }\n}\n\nexport default StyledText;\n"]},"metadata":{},"sourceType":"module"}