{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/TopicGraph.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AwesomeHierarchyGraph from 'react-native-d3-tree-graph';\nvar root = {\n  name: \"\",\n  id: 1,\n  hidden: true,\n  children: [{\n    name: \"Q\",\n    id: 16,\n    no_parent: true\n  }]\n};\nvar siblings = [{\n  source: {\n    id: 3,\n    name: \"C\"\n  },\n  target: {\n    id: 11,\n    name: \"K\"\n  }\n}];\n\nvar TopicGraph = function (_Component) {\n  _inherits(TopicGraph, _Component);\n\n  var _super = _createSuper(TopicGraph);\n\n  function TopicGraph() {\n    _classCallCheck(this, TopicGraph);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TopicGraph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(AwesomeHierarchyGraph, {\n        root: root,\n        siblings: siblings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TopicGraph;\n}(Component);\n\nexport { TopicGraph as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/TopicGraph.js"],"names":["AwesomeHierarchyGraph","root","name","id","hidden","children","no_parent","siblings","source","target","TopicGraph","styles","container","Component","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","welcome","fontSize","textAlign","margin","instructions","color","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,qBAAP,MAAkC,4BAAlC;AAEA,IAAIC,IAAI,GAAG;AACPC,EAAAA,IAAI,EAAE,EADC;AAEPC,EAAAA,EAAE,EAAE,CAFG;AAGPC,EAAAA,MAAM,EAAE,IAHD;AAIPC,EAAAA,QAAQ,EAAE,CAAE;AACJH,IAAAA,IAAI,EAAE,GADF;AAEJC,IAAAA,EAAE,EAAE,EAFA;AAGJG,IAAAA,SAAS,EAAE;AAHP,GAAF;AAJH,CAAX;AAWA,IAAIC,QAAQ,GAAG,CAAC;AACZC,EAAAA,MAAM,EAAE;AACJL,IAAAA,EAAE,EAAE,CADA;AAEJD,IAAAA,IAAI,EAAE;AAFF,GADI;AAKZO,EAAAA,MAAM,EAAE;AACJN,IAAAA,EAAE,EAAE,EADA;AAEJD,IAAAA,IAAI,EAAE;AAFF;AALI,CAAD,CAAf;;IAWqBQ,U;;;;;;;;;;;;;6BACV;AACP,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,qBAAD;AACC,QAAA,IAAI,EAAIX,IADT;AAEC,QAAA,QAAQ,EAAIM,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ;AAQD;;;;EAVqCM,S;;SAAnBH,U;AAarB,IAAMC,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,SAAS,EAAE,QAFJ;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAPsB;AAY/BC,EAAAA,YAAY,EAAE;AACZF,IAAAA,SAAS,EAAE,QADC;AAEZG,IAAAA,KAAK,EAAE,SAFK;AAGZC,IAAAA,YAAY,EAAE;AAHF;AAZiB,CAAlB,CAAf","sourcesContent":["import AwesomeHierarchyGraph from 'react-native-d3-tree-graph'\n\nvar root = {\n    name: \"\",\n    id: 1,\n    hidden: true,\n    children: [ {\n            name: \"Q\",\n            id: 16,\n            no_parent: true\n        }]\n    }\n\nvar siblings = [{\n    source: {\n        id: 3,\n        name: \"C\"\n    },\n    target: {\n        id: 11,\n        name: \"K\"\n    }\n }]\n \nexport default class TopicGraph extends Component {\n  render() {\n    return (\n        <View style={styles.container}>\n        <AwesomeHierarchyGraph\n         root = {root}\n         siblings = {siblings}\n        />\n       </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});"]},"metadata":{},"sourceType":"module"}