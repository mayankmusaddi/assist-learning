{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/TopicGraph.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar buttonClickedHandler = function buttonClickedHandler() {\n  console.log('You have been clicked a button!');\n};\n\nvar _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isPress = _React$useState2[0],\n    setIsPress = _React$useState2[1];\n\nvar touchProps = {\n  activeOpacity: 1,\n  underlayColor: 'blue',\n  style: isPress ? styles.btnPress : styles.btnNormal,\n  onHideUnderlay: function onHideUnderlay() {\n    return setIsPress(false);\n  },\n  onShowUnderlay: function onShowUnderlay() {\n    return setIsPress(true);\n  },\n  onPress: function onPress() {\n    return console.log('HELLO');\n  }\n};\n\nvar TopicGraph = function (_React$Component) {\n  _inherits(TopicGraph, _React$Component);\n\n  var _super = _createSuper(TopicGraph);\n\n  function TopicGraph() {\n    _classCallCheck(this, TopicGraph);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TopicGraph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"Cell\")), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, _extends({}, touchProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, \"History\"))), React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Structure\")), React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \"Functions\"))));\n    }\n  }]);\n\n  return TopicGraph;\n}(React.Component);\n\nexport { TopicGraph as default };\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  roundButton1: {\n    width: 150,\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n    backgroundColor: 'orange'\n  },\n  roundButton2: {\n    marginTop: 20,\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    margin: 10,\n    borderRadius: 100,\n    backgroundColor: '#ccc'\n  },\n  btnNormal: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 30,\n    width: 100\n  },\n  btnPress: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    height: 30,\n    width: 100\n  }\n});","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/TopicGraph.js"],"names":["React","buttonClickedHandler","console","log","useState","isPress","setIsPress","touchProps","activeOpacity","underlayColor","style","styles","btnPress","btnNormal","onHideUnderlay","onShowUnderlay","onPress","TopicGraph","screen","roundButton1","flexDirection","roundButton2","Component","StyleSheet","create","flex","justifyContent","alignItems","width","height","padding","borderRadius","backgroundColor","marginTop","margin","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity, TouchableHighlight} from 'react-native';\n\nconst buttonClickedHandler = () => {\n  console.log('You have been clicked a button!');\n  // do something\n};\n\nvar [ isPress, setIsPress ] = React.useState(false);\n\n  var touchProps = {\n    activeOpacity: 1,\n    underlayColor: 'blue',                               // <-- \"backgroundColor\" will be always overwritten by \"underlayColor\"\n    style: isPress ? styles.btnPress : styles.btnNormal, // <-- but you can still apply other style changes\n    onHideUnderlay: () => setIsPress(false),\n    onShowUnderlay: () => setIsPress(true),\n    onPress: () => console.log('HELLO'),                 // <-- \"onPress\" is apparently required\n  };\n\nexport default class TopicGraph extends React.Component {\n  render() {\n    return (\n    <View style={styles.screen}>\n      <TouchableOpacity\n        onPress={buttonClickedHandler}\n        style={styles.roundButton1}>\n        <Text>Cell</Text>\n      </TouchableOpacity>\n\n      <View style={{flexDirection:\"row\"}}>\n        <TouchableHighlight\n          {...touchProps}>\n          <TouchableOpacity\n            onPress={buttonClickedHandler}\n            style={styles.roundButton2}>\n            <Text>History</Text>\n          </TouchableOpacity>\n        </TouchableHighlight>\n\n        <TouchableOpacity\n          onPress={buttonClickedHandler}\n          style={styles.roundButton2}>\n          <Text>Structure</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPress={buttonClickedHandler}\n          style={styles.roundButton2}>\n          <Text>Functions</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n  }\n}\n\n/// Just some styles\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  roundButton1: {\n    width: 150,\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n    backgroundColor: 'orange',\n  },\n  roundButton2: {\n    marginTop: 20,\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    margin: 10,\n    borderRadius: 100,\n    backgroundColor: '#ccc',\n  },\n  btnNormal: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 30,\n    width: 100,\n  },\n  btnPress: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    height: 30,\n    width: 100,\n  }\n});"]},"metadata":{},"sourceType":"module"}