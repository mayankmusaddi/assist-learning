{"ast":null,"code":"export function flatten(root) {\n  var n = [],\n      i = 0;\n\n  function recurse(node) {\n    if (node.children) node.children.forEach(recurse);\n    if (!node.id) node.id = ++i;\n    n.push(node);\n  }\n\n  recurse(root);\n  return n;\n}","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/node_modules/react-native-d3-tree-graph/FlatNodes.js"],"names":["flatten","root","n","i","recurse","node","children","forEach","id","push"],"mappings":"AAAA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,MAAIC,CAAC,GAAG,EAAR;AAAA,MACIC,CAAC,GAAG,CADR;;AAGA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,QAAIA,IAAI,CAACC,QAAT,EAAmBD,IAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBH,OAAtB;AACnB,QAAI,CAACC,IAAI,CAACG,EAAV,EAAcH,IAAI,CAACG,EAAL,GAAU,EAAEL,CAAZ;AACdD,IAAAA,CAAC,CAACO,IAAF,CAAOJ,IAAP;AACH;;AACDD,EAAAA,OAAO,CAACH,IAAD,CAAP;AACA,SAAOC,CAAP;AACH","sourcesContent":["export function flatten(root) {\n    var n = [],\n        i = 0;\n\n    function recurse(node) {\n        if (node.children) node.children.forEach(recurse);\n        if (!node.id) node.id = ++i;\n        n.push(node);\n    }\n    recurse(root);\n    return n;\n}"]},"metadata":{},"sourceType":"module"}