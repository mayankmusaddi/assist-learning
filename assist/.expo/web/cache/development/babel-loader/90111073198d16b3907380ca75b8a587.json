{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/drive1/sem7/TPE/hackathon/assist-learning/assist/node_modules/react-native-swipe-cards/SwipeCards.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport clamp from 'clamp';\nimport Defaults from \"./Defaults.js\";\nvar viewport = Dimensions.get('window');\nvar SWIPE_THRESHOLD = 120;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  yup: {\n    borderColor: 'green',\n    borderWidth: 2,\n    position: 'absolute',\n    padding: 20,\n    bottom: 20,\n    borderRadius: 5,\n    right: 0\n  },\n  yupText: {\n    fontSize: 16,\n    color: 'green'\n  },\n  maybe: {\n    borderColor: 'blue',\n    borderWidth: 2,\n    position: 'absolute',\n    padding: 20,\n    bottom: 20,\n    borderRadius: 5,\n    right: 20\n  },\n  maybeText: {\n    fontSize: 16,\n    color: 'blue'\n  },\n  nope: {\n    borderColor: 'red',\n    borderWidth: 2,\n    position: 'absolute',\n    bottom: 20,\n    padding: 20,\n    borderRadius: 5,\n    left: 0\n  },\n  nopeText: {\n    fontSize: 16,\n    color: 'red'\n  }\n});\nvar currentIndex = {};\nvar guid = 0;\n\nvar SwipeCards = function (_Component) {\n  _inherits(SwipeCards, _Component);\n\n  var _super = _createSuper(SwipeCards);\n\n  function SwipeCards(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeCards);\n\n    _this = _super.call(this, props);\n    _this.guid = _this.props.guid || guid++;\n    if (!currentIndex[_this.guid]) currentIndex[_this.guid] = 0;\n    _this.state = {\n      pan: new Animated.ValueXY(0),\n      enter: new Animated.Value(0.5),\n      cards: [].concat(_this.props.cards),\n      card: _this.props.cards[currentIndex[_this.guid]]\n    };\n    _this.lastX = 0;\n    _this.lastY = 0;\n    _this.cardAnimation = null;\n    _this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(e, gestureState) {\n        if (Math.abs(gestureState.dx) > 3 || Math.abs(gestureState.dy) > 3) {\n          _this.props.onDragStart();\n\n          return true;\n        }\n\n        return false;\n      },\n      onPanResponderGrant: function onPanResponderGrant(e, gestureState) {\n        _this.state.pan.setOffset({\n          x: _this.state.pan.x._value,\n          y: _this.state.pan.y._value\n        });\n\n        _this.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n        return _this.props.allowGestureTermination;\n      },\n      onPanResponderMove: Animated.event([null, {\n        dx: _this.state.pan.x,\n        dy: _this.props.dragY ? _this.state.pan.y : 0\n      }]),\n      onPanResponderRelease: function onPanResponderRelease(e, _ref) {\n        var vx = _ref.vx,\n            vy = _ref.vy,\n            dx = _ref.dx,\n            dy = _ref.dy;\n\n        _this.props.onDragRelease();\n\n        _this.state.pan.flattenOffset();\n\n        var velocity;\n\n        if (Math.abs(dx) <= 5 && Math.abs(dy) <= 5) {\n            _this.props.onClickHandler(_this.state.card);\n          }\n\n        if (vx > 0) {\n          velocity = clamp(vx, 3, 5);\n        } else if (vx < 0) {\n          velocity = clamp(vx * -1, 3, 5) * -1;\n        } else {\n          velocity = dx < 0 ? -3 : 3;\n        }\n\n        var hasSwipedHorizontally = Math.abs(_this.state.pan.x._value) > SWIPE_THRESHOLD;\n        var hasSwipedVertically = Math.abs(_this.state.pan.y._value) > SWIPE_THRESHOLD;\n\n        if (hasSwipedHorizontally || hasSwipedVertically && _this.props.hasMaybeAction) {\n          var cancelled = false;\n          var hasMovedRight = hasSwipedHorizontally && _this.state.pan.x._value > 0;\n          var hasMovedLeft = hasSwipedHorizontally && _this.state.pan.x._value < 0;\n          var hasMovedUp = hasSwipedVertically && _this.state.pan.y._value < 0;\n\n          if (hasMovedRight) {\n            cancelled = _this.props.handleYup(_this.state.card);\n          } else if (hasMovedLeft) {\n            cancelled = _this.props.handleNope(_this.state.card);\n          } else if (hasMovedUp && _this.props.hasMaybeAction) {\n            cancelled = _this.props.handleMaybe(_this.state.card);\n          } else {\n            cancelled = true;\n          }\n\n          if (cancelled) {\n            _this._resetPan();\n\n            return;\n          }\n\n          ;\n\n          _this.props.cardRemoved(currentIndex[_this.guid]);\n\n          if (_this.props.smoothTransition) {\n            _this._advanceState();\n          } else {\n            _this.cardAnimation = Animated.decay(_this.state.pan, {\n              velocity: {\n                x: velocity,\n                y: vy\n              },\n              deceleration: 0.98\n            });\n\n            _this.cardAnimation.start(function (status) {\n              if (status.finished) _this._advanceState();else _this._resetState();\n              _this.cardAnimation = null;\n            });\n          }\n        } else {\n          _this._resetPan();\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(SwipeCards, [{\n    key: \"_forceLeftSwipe\",\n    value: function _forceLeftSwipe() {\n      var _this2 = this;\n\n      this.cardAnimation = Animated.timing(this.state.pan, {\n        toValue: {\n          x: -500,\n          y: 0\n        }\n      }).start(function (status) {\n        if (status.finished) _this2._advanceState();else _this2._resetState();\n        _this2.cardAnimation = null;\n      });\n      this.props.cardRemoved(currentIndex[this.guid]);\n    }\n  }, {\n    key: \"_forceUpSwipe\",\n    value: function _forceUpSwipe() {\n      var _this3 = this;\n\n      this.cardAnimation = Animated.timing(this.state.pan, {\n        toValue: {\n          x: 0,\n          y: 500\n        }\n      }).start(function (status) {\n        if (status.finished) _this3._advanceState();else _this3._resetState();\n        _this3.cardAnimation = null;\n      });\n      this.props.cardRemoved(currentIndex[this.guid]);\n    }\n  }, {\n    key: \"_forceRightSwipe\",\n    value: function _forceRightSwipe() {\n      var _this4 = this;\n\n      this.cardAnimation = Animated.timing(this.state.pan, {\n        toValue: {\n          x: 500,\n          y: 0\n        }\n      }).start(function (status) {\n        if (status.finished) _this4._advanceState();else _this4._resetState();\n        _this4.cardAnimation = null;\n      });\n      this.props.cardRemoved(currentIndex[this.guid]);\n    }\n  }, {\n    key: \"_goToNextCard\",\n    value: function _goToNextCard() {\n      currentIndex[this.guid]++;\n\n      if (currentIndex[this.guid] > this.state.cards.length - 1 && this.props.loop) {\n        this.props.onLoop();\n        currentIndex[this.guid] = 0;\n      }\n\n      this.setState({\n        card: this.state.cards[currentIndex[this.guid]]\n      });\n    }\n  }, {\n    key: \"_goToPrevCard\",\n    value: function _goToPrevCard() {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      this.state.enter.setValue(0);\n\n      this._animateEntrance();\n\n      currentIndex[this.guid]--;\n\n      if (currentIndex[this.guid] < 0) {\n        currentIndex[this.guid] = 0;\n      }\n\n      this.setState({\n        card: this.state.cards[currentIndex[this.guid]]\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animateEntrance();\n    }\n  }, {\n    key: \"_animateEntrance\",\n    value: function _animateEntrance() {\n      Animated.spring(this.state.enter, {\n        toValue: 1,\n        friction: 8\n      }).start();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.cards !== this.props.cards) {\n        if (this.cardAnimation) {\n          this.cardAnimation.stop();\n          this.cardAnimation = null;\n        }\n\n        currentIndex[this.guid] = 0;\n        this.setState({\n          cards: [].concat(nextProps.cards),\n          card: nextProps.cards[0]\n        });\n      }\n    }\n  }, {\n    key: \"_resetPan\",\n    value: function _resetPan() {\n      Animated.spring(this.state.pan, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        friction: 4\n      }).start();\n    }\n  }, {\n    key: \"_resetState\",\n    value: function _resetState() {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      this.state.enter.setValue(0);\n\n      this._animateEntrance();\n    }\n  }, {\n    key: \"_advanceState\",\n    value: function _advanceState() {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      this.state.enter.setValue(0);\n\n      this._animateEntrance();\n\n      this._goToNextCard();\n    }\n  }, {\n    key: \"getCurrentCard\",\n    value: function getCurrentCard() {\n      return this.state.cards[currentIndex[this.guid]];\n    }\n  }, {\n    key: \"renderNoMoreCards\",\n    value: function renderNoMoreCards() {\n      if (this.props.renderNoMoreCards) {\n        return this.props.renderNoMoreCards();\n      }\n\n      return React.createElement(Defaults.NoMoreCards, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderStack\",\n    value: function renderStack() {\n      var _this5 = this;\n\n      if (!this.state.card) {\n        return this.renderNoMoreCards();\n      }\n\n      var cards = this.state.cards.slice(currentIndex[this.guid], currentIndex[this.guid] + this.props.stackDepth).reverse();\n      return cards.map(function (card, i) {\n        var offsetX = _this5.props.stackOffsetX * cards.length - i * _this5.props.stackOffsetX;\n        var lastOffsetX = offsetX + _this5.props.stackOffsetX;\n        var offsetY = _this5.props.stackOffsetY * cards.length - i * _this5.props.stackOffsetY;\n        var lastOffsetY = offsetY + _this5.props.stackOffsetY;\n        var opacity = 0.25 + 0.75 / cards.length * (i + 1);\n        var lastOpacity = 0.25 + 0.75 / cards.length * i;\n        var scale = 0.85 + 0.15 / cards.length * (i + 1);\n        var lastScale = 0.85 + 0.15 / cards.length * i;\n        var style = {\n          position: 'absolute',\n          top: _this5.state.enter.interpolate({\n            inputRange: [0, 1],\n            outputRange: [lastOffsetY, offsetY]\n          }),\n          left: _this5.state.enter.interpolate({\n            inputRange: [0, 1],\n            outputRange: [lastOffsetX, offsetX]\n          }),\n          opacity: _this5.props.smoothTransition ? 1 : _this5.state.enter.interpolate({\n            inputRange: [0, 1],\n            outputRange: [lastOpacity, opacity]\n          }),\n          transform: [{\n            scale: _this5.state.enter.interpolate({\n              inputRange: [0, 1],\n              outputRange: [lastScale, scale]\n            })\n          }],\n          elevation: i * 10\n        };\n\n        if (i + 1 === cards.length) {\n          var pan = _this5.state.pan;\n          var _ref2 = [pan.x, pan.y],\n              translateX = _ref2[0],\n              translateY = _ref2[1];\n          var rotate = pan.x.interpolate({\n            inputRange: [-200, 0, 200],\n            outputRange: [\"-30deg\", \"0deg\", \"30deg\"]\n          });\n\n          var _opacity = _this5.props.smoothTransition ? 1 : pan.x.interpolate({\n            inputRange: [-200, 0, 200],\n            outputRange: [0.5, 1, 0.5]\n          });\n\n          var animatedCardStyles = _objectSpread(_objectSpread({}, style), {}, {\n            transform: [{\n              translateX: translateX\n            }, {\n              translateY: translateY\n            }, {\n              rotate: rotate\n            }, {\n              scale: _this5.state.enter.interpolate({\n                inputRange: [0, 1],\n                outputRange: [lastScale, scale]\n              })\n            }]\n          });\n\n          return React.createElement(Animated.View, _extends({\n            key: card[_this5.props.cardKey],\n            style: [styles.card, animatedCardStyles]\n          }, _this5._panResponder.panHandlers, {\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 16\n            }\n          }), _this5.props.renderCard(_this5.state.card));\n        }\n\n        return React.createElement(Animated.View, {\n          key: card[_this5.props.cardKey],\n          style: style,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 14\n          }\n        }, _this5.props.renderCard(card));\n      });\n    }\n  }, {\n    key: \"renderCard\",\n    value: function renderCard() {\n      if (!this.state.card) {\n        return this.renderNoMoreCards();\n      }\n\n      var _this$state = this.state,\n          pan = _this$state.pan,\n          enter = _this$state.enter;\n      var _ref3 = [pan.x, pan.y],\n          translateX = _ref3[0],\n          translateY = _ref3[1];\n      var rotate = pan.x.interpolate({\n        inputRange: [-200, 0, 200],\n        outputRange: [\"-30deg\", \"0deg\", \"30deg\"]\n      });\n      var opacity = pan.x.interpolate({\n        inputRange: [-200, 0, 200],\n        outputRange: [0.5, 1, 0.5]\n      });\n      var scale = enter;\n      var animatedCardStyles = {\n        transform: [{\n          translateX: translateX\n        }, {\n          translateY: translateY\n        }, {\n          rotate: rotate\n        }, {\n          scale: scale\n        }],\n        opacity: opacity\n      };\n      return React.createElement(Animated.View, _extends({\n        key: \"top\",\n        style: [styles.card, animatedCardStyles]\n      }, this._panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 12\n        }\n      }), this.props.renderCard(this.state.card));\n    }\n  }, {\n    key: \"renderNope\",\n    value: function renderNope() {\n      var pan = this.state.pan;\n      var nopeOpacity = pan.x.interpolate({\n        inputRange: [-SWIPE_THRESHOLD, -(SWIPE_THRESHOLD / 2)],\n        outputRange: [1, 0],\n        extrapolate: 'clamp'\n      });\n      var nopeScale = pan.x.interpolate({\n        inputRange: [-SWIPE_THRESHOLD, 0],\n        outputRange: [1, 0],\n        extrapolate: 'clamp'\n      });\n      var animatedNopeStyles = {\n        transform: [{\n          scale: nopeScale\n        }],\n        opacity: nopeOpacity\n      };\n\n      if (this.props.renderNope) {\n        return this.props.renderNope(pan);\n      }\n\n      if (this.props.showNope) {\n        var inner = this.props.noView ? this.props.noView : React.createElement(Text, {\n          style: [styles.nopeText, this.props.nopeTextStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 11\n          }\n        }, this.props.nopeText);\n        return React.createElement(Animated.View, {\n          style: [styles.nope, this.props.nopeStyle, animatedNopeStyles],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 14\n          }\n        }, inner);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderMaybe\",\n    value: function renderMaybe() {\n      if (!this.props.hasMaybeAction) return null;\n      var pan = this.state.pan;\n      var maybeOpacity = pan.y.interpolate({\n        inputRange: [-SWIPE_THRESHOLD, -(SWIPE_THRESHOLD / 2)],\n        outputRange: [1, 0],\n        extrapolate: 'clamp'\n      });\n      var maybeScale = pan.x.interpolate({\n        inputRange: [-SWIPE_THRESHOLD, 0, SWIPE_THRESHOLD],\n        outputRange: [0, 1, 0],\n        extrapolate: 'clamp'\n      });\n      var animatedMaybeStyles = {\n        transform: [{\n          scale: maybeScale\n        }],\n        opacity: maybeOpacity\n      };\n\n      if (this.props.renderMaybe) {\n        return this.props.renderMaybe(pan);\n      }\n\n      if (this.props.showMaybe) {\n        var inner = this.props.maybeView ? this.props.maybeView : React.createElement(Text, {\n          style: [styles.maybeText, this.props.maybeTextStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 11\n          }\n        }, this.props.maybeText);\n        return React.createElement(Animated.View, {\n          style: [styles.maybe, this.props.maybeStyle, animatedMaybeStyles],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 14\n          }\n        }, inner);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderYup\",\n    value: function renderYup() {\n      var pan = this.state.pan;\n      var yupOpacity = pan.x.interpolate({\n        inputRange: [SWIPE_THRESHOLD / 2, SWIPE_THRESHOLD],\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n      });\n      var yupScale = pan.x.interpolate({\n        inputRange: [0, SWIPE_THRESHOLD],\n        outputRange: [0.5, 1],\n        extrapolate: 'clamp'\n      });\n      var animatedYupStyles = {\n        transform: [{\n          scale: yupScale\n        }],\n        opacity: yupOpacity\n      };\n\n      if (this.props.renderYup) {\n        return this.props.renderYup(pan);\n      }\n\n      if (this.props.showYup) {\n        var inner = this.props.yupView ? this.props.yupView : React.createElement(Text, {\n          style: [styles.yupText, this.props.yupTextStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 11\n          }\n        }, this.props.yupText);\n        return React.createElement(Animated.View, {\n          style: [styles.yup, this.props.yupStyle, animatedYupStyles],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 16\n          }\n        }, inner);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 7\n        }\n      }, this.props.stack ? this.renderStack() : this.renderCard(), this.renderNope(), this.renderMaybe(), this.renderYup());\n    }\n  }]);\n\n  return SwipeCards;\n}(Component);\n\nSwipeCards.propTypes = {\n  cards: PropTypes.array,\n  cardKey: PropTypes.string,\n  hasMaybeAction: PropTypes.bool,\n  loop: PropTypes.bool,\n  onLoop: PropTypes.func,\n  allowGestureTermination: PropTypes.bool,\n  stack: PropTypes.bool,\n  stackGuid: PropTypes.string,\n  stackDepth: PropTypes.number,\n  stackOffsetX: PropTypes.number,\n  stackOffsetY: PropTypes.number,\n  renderNoMoreCards: PropTypes.func,\n  showYup: PropTypes.bool,\n  showMaybe: PropTypes.bool,\n  showNope: PropTypes.bool,\n  handleYup: PropTypes.func,\n  handleMaybe: PropTypes.func,\n  handleNope: PropTypes.func,\n  yupText: PropTypes.string,\n  yupView: PropTypes.element,\n  maybeText: PropTypes.string,\n  maybeView: PropTypes.element,\n  nopeText: PropTypes.string,\n  noView: PropTypes.element,\n  onClickHandler: PropTypes.func,\n  renderCard: PropTypes.func,\n  cardRemoved: PropTypes.func,\n  dragY: PropTypes.bool,\n  smoothTransition: PropTypes.bool\n};\nSwipeCards.defaultProps = {\n  cards: [],\n  cardKey: 'key',\n  hasMaybeAction: false,\n  loop: false,\n  onLoop: function onLoop() {\n    return null;\n  },\n  allowGestureTermination: true,\n  stack: false,\n  stackDepth: 5,\n  stackOffsetX: 25,\n  stackOffsetY: 0,\n  showYup: true,\n  showMaybe: true,\n  showNope: true,\n  handleYup: function handleYup(card) {\n    return null;\n  },\n  handleMaybe: function handleMaybe(card) {\n    return null;\n  },\n  handleNope: function handleNope(card) {\n    return null;\n  },\n  nopeText: \"Nope!\",\n  maybeText: \"Maybe!\",\n  yupText: \"Yup!\",\n  onClickHandler: function onClickHandler() {\n    alert('tap');\n  },\n  onDragStart: function onDragStart() {},\n  onDragRelease: function onDragRelease() {},\n  cardRemoved: function cardRemoved(ix) {\n    return null;\n  },\n  renderCard: function renderCard(card) {\n    return null;\n  },\n  style: styles.container,\n  dragY: true,\n  smoothTransition: false\n};\nexport { SwipeCards as default };","map":{"version":3,"sources":["/drive1/sem7/TPE/hackathon/assist-learning/assist/node_modules/react-native-swipe-cards/SwipeCards.js"],"names":["React","Component","PropTypes","clamp","Defaults","viewport","Dimensions","get","SWIPE_THRESHOLD","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","yup","borderColor","borderWidth","position","padding","bottom","borderRadius","right","yupText","fontSize","color","maybe","maybeText","nope","left","nopeText","currentIndex","guid","SwipeCards","props","state","pan","Animated","ValueXY","enter","Value","cards","concat","card","lastX","lastY","cardAnimation","_panResponder","PanResponder","onMoveShouldSetPanResponderCapture","e","gestureState","Math","abs","dx","dy","onDragStart","onPanResponderGrant","setOffset","x","_value","y","setValue","onPanResponderTerminationRequest","evt","allowGestureTermination","onPanResponderMove","event","dragY","onPanResponderRelease","vx","vy","onDragRelease","flattenOffset","velocity","onClickHandler","hasSwipedHorizontally","hasSwipedVertically","hasMaybeAction","cancelled","hasMovedRight","hasMovedLeft","hasMovedUp","handleYup","handleNope","handleMaybe","_resetPan","cardRemoved","smoothTransition","_advanceState","decay","deceleration","start","status","finished","_resetState","timing","toValue","length","loop","onLoop","setState","_animateEntrance","spring","friction","nextProps","stop","_goToNextCard","renderNoMoreCards","slice","stackDepth","reverse","map","i","offsetX","stackOffsetX","lastOffsetX","offsetY","stackOffsetY","lastOffsetY","opacity","lastOpacity","scale","lastScale","style","top","interpolate","inputRange","outputRange","transform","elevation","translateX","translateY","rotate","animatedCardStyles","cardKey","panHandlers","renderCard","nopeOpacity","extrapolate","nopeScale","animatedNopeStyles","renderNope","showNope","inner","noView","nopeTextStyle","nopeStyle","maybeOpacity","maybeScale","animatedMaybeStyles","renderMaybe","showMaybe","maybeView","maybeTextStyle","maybeStyle","yupOpacity","yupScale","animatedYupStyles","renderYup","showYup","yupView","yupTextStyle","yupStyle","stack","renderStack","propTypes","array","string","bool","func","stackGuid","number","element","defaultProps","alert","ix"],"mappings":"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","sourcesContent":["/* Gratefully copied from https://github.com/brentvatne/react-native-animated-demo-tinder */\n'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Animated,\n  PanResponder,\n  Dimensions,\n  Image\n} from 'react-native';\n\nimport clamp from 'clamp';\n\nimport Defaults from './Defaults.js';\n\nconst viewport = Dimensions.get('window')\nconst SWIPE_THRESHOLD = 120;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  yup: {\n    borderColor: 'green',\n    borderWidth: 2,\n    position: 'absolute',\n    padding: 20,\n    bottom: 20,\n    borderRadius: 5,\n    right: 0,\n  },\n  yupText: {\n    fontSize: 16,\n    color: 'green',\n  },\n  maybe: {\n    borderColor: 'blue',\n    borderWidth: 2,\n    position: 'absolute',\n    padding: 20,\n    bottom: 20,\n    borderRadius: 5,\n    right: 20,\n  },\n  maybeText: {\n    fontSize: 16,\n    color: 'blue',\n  },\n  nope: {\n    borderColor: 'red',\n    borderWidth: 2,\n    position: 'absolute',\n    bottom: 20,\n    padding: 20,\n    borderRadius: 5,\n    left: 0,\n  },\n  nopeText: {\n    fontSize: 16,\n    color: 'red',\n  }\n});\n\n//Components could be unloaded and loaded and we will loose the users currentIndex, we can persist it here.\nlet currentIndex = {};\nlet guid = 0;\n\nexport default class SwipeCards extends Component {\n\n  static propTypes = {\n    cards: PropTypes.array,\n    cardKey: PropTypes.string,\n    hasMaybeAction: PropTypes.bool,\n    loop: PropTypes.bool,\n    onLoop: PropTypes.func,\n    allowGestureTermination: PropTypes.bool,\n    stack: PropTypes.bool,\n    stackGuid: PropTypes.string,\n    stackDepth: PropTypes.number,\n    stackOffsetX: PropTypes.number,\n    stackOffsetY: PropTypes.number,\n    renderNoMoreCards: PropTypes.func,\n    showYup: PropTypes.bool,\n    showMaybe: PropTypes.bool,\n    showNope: PropTypes.bool,\n    handleYup: PropTypes.func,\n    handleMaybe: PropTypes.func,\n    handleNope: PropTypes.func,\n    yupText: PropTypes.string,\n    yupView: PropTypes.element,\n    maybeText: PropTypes.string,\n    maybeView: PropTypes.element,\n    nopeText: PropTypes.string,\n    noView: PropTypes.element,\n    onClickHandler: PropTypes.func,\n    renderCard: PropTypes.func,\n    cardRemoved: PropTypes.func,\n    dragY: PropTypes.bool,\n    smoothTransition: PropTypes.bool\n  };\n\n  static defaultProps = {\n    cards: [],\n    cardKey: 'key',\n    hasMaybeAction: false,\n    loop: false,\n    onLoop: () => null,\n    allowGestureTermination: true,\n    stack: false,\n    stackDepth: 5,\n    stackOffsetX: 25,\n    stackOffsetY: 0,\n    showYup: true,\n    showMaybe: true,\n    showNope: true,\n    handleYup: (card) => null,\n    handleMaybe: (card) => null,\n    handleNope: (card) => null,\n    nopeText: \"Nope!\",\n    maybeText: \"Maybe!\",\n    yupText: \"Yup!\",\n    onClickHandler: () => { alert('tap') },\n    onDragStart: () => {},\n    onDragRelease: () => {},\n    cardRemoved: (ix) => null,\n    renderCard: (card) => null,\n    style: styles.container,\n    dragY: true,\n    smoothTransition: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    //Use a persistent variable to track currentIndex instead of a local one.\n    this.guid = this.props.guid || guid++;\n    if (!currentIndex[this.guid]) currentIndex[this.guid] = 0;\n\n    this.state = {\n      pan: new Animated.ValueXY(0),\n      enter: new Animated.Value(0.5),\n      cards: [].concat(this.props.cards),\n      card: this.props.cards[currentIndex[this.guid]],\n    };\n\n    this.lastX = 0;\n    this.lastY = 0;\n\n    this.cardAnimation = null;\n\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: (e, gestureState) => {\n        if (Math.abs(gestureState.dx) > 3 || Math.abs(gestureState.dy) > 3) {\n          this.props.onDragStart();\n          return true;\n        }\n        return false;\n      },\n\n      onPanResponderGrant: (e, gestureState) => {\n        this.state.pan.setOffset({ x: this.state.pan.x._value, y: this.state.pan.y._value });\n        this.state.pan.setValue({ x: 0, y: 0 });\n      },\n\n      onPanResponderTerminationRequest: (evt, gestureState) => this.props.allowGestureTermination,\n\n      onPanResponderMove: Animated.event([\n        null, { dx: this.state.pan.x, dy: this.props.dragY ? this.state.pan.y : 0 },\n      ]),\n\n      onPanResponderRelease: (e, {vx, vy, dx, dy}) => {\n        this.props.onDragRelease()\n        this.state.pan.flattenOffset();\n        let velocity;\n        if (Math.abs(dx) <= 5 && Math.abs(dy) <= 5)   //meaning the gesture did not cover any distance\n        {\n          this.props.onClickHandler(this.state.card)\n        }\n\n        if (vx > 0) {\n          velocity = clamp(vx, 3, 5);\n        } else if (vx < 0) {\n          velocity = clamp(vx * -1, 3, 5) * -1;\n        } else {\n          velocity = dx < 0 ? -3 : 3;\n        }\n\n        const hasSwipedHorizontally = Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD\n        const hasSwipedVertically = Math.abs(this.state.pan.y._value) > SWIPE_THRESHOLD\n        if (hasSwipedHorizontally || (hasSwipedVertically && this.props.hasMaybeAction)) {\n\n          let cancelled = false;\n\n          const hasMovedRight = hasSwipedHorizontally && this.state.pan.x._value > 0\n          const hasMovedLeft = hasSwipedHorizontally && this.state.pan.x._value < 0\n          const hasMovedUp = hasSwipedVertically && this.state.pan.y._value < 0\n\n          if (hasMovedRight) {\n            cancelled = this.props.handleYup(this.state.card);\n          } else if (hasMovedLeft) {\n            cancelled = this.props.handleNope(this.state.card);\n          } else if (hasMovedUp && this.props.hasMaybeAction) {\n            cancelled = this.props.handleMaybe(this.state.card);\n          } else {\n            cancelled = true\n          }\n\n          //Yup or nope was cancelled, return the card to normal.\n          if (cancelled) {\n            this._resetPan();\n            return;\n          };\n\n          this.props.cardRemoved(currentIndex[this.guid]);\n\n          if (this.props.smoothTransition) {\n            this._advanceState();\n          } else {\n            this.cardAnimation = Animated.decay(this.state.pan, {\n              velocity: { x: velocity, y: vy },\n              deceleration: 0.98\n            });\n            this.cardAnimation.start(status => {\n              if (status.finished) this._advanceState();\n              else this._resetState();\n\n              this.cardAnimation = null;\n            }\n            );\n          }\n\n        } else {\n          this._resetPan();\n        }\n      }\n    });\n  }\n\n  _forceLeftSwipe() {\n    this.cardAnimation = Animated.timing(this.state.pan, {\n      toValue: { x: -500, y: 0 },\n    }).start(status => {\n      if (status.finished) this._advanceState();\n      else this._resetState();\n\n      this.cardAnimation = null;\n    }\n      );\n    this.props.cardRemoved(currentIndex[this.guid]);\n  }\n\n  _forceUpSwipe() {\n    this.cardAnimation = Animated.timing(this.state.pan, {\n      toValue: { x: 0, y: 500 },\n    }).start(status => {\n      if (status.finished) this._advanceState();\n      else this._resetState();\n\n      this.cardAnimation = null;\n    }\n      );\n    this.props.cardRemoved(currentIndex[this.guid]);\n  }\n\n  _forceRightSwipe() {\n    this.cardAnimation = Animated.timing(this.state.pan, {\n      toValue: { x: 500, y: 0 },\n    }).start(status => {\n      if (status.finished) this._advanceState();\n      else this._resetState();\n\n      this.cardAnimation = null;\n    }\n      );\n    this.props.cardRemoved(currentIndex[this.guid]);\n  }\n\n  _goToNextCard() {\n    currentIndex[this.guid]++;\n\n    // Checks to see if last card.\n    // If props.loop=true, will start again from the first card.\n    if (currentIndex[this.guid] > this.state.cards.length - 1 && this.props.loop) {\n      this.props.onLoop();\n      currentIndex[this.guid] = 0;\n    }\n\n    this.setState({\n      card: this.state.cards[currentIndex[this.guid]]\n    });\n  }\n\n  _goToPrevCard() {\n    this.state.pan.setValue({ x: 0, y: 0 });\n    this.state.enter.setValue(0);\n    this._animateEntrance();\n\n    currentIndex[this.guid]--;\n\n    if (currentIndex[this.guid] < 0) {\n      currentIndex[this.guid] = 0;\n    }\n\n    this.setState({\n      card: this.state.cards[currentIndex[this.guid]]\n    });\n  }\n\n  componentDidMount() {\n    this._animateEntrance();\n  }\n\n  _animateEntrance() {\n    Animated.spring(\n      this.state.enter,\n      { toValue: 1, friction: 8 }\n    ).start();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.cards !== this.props.cards) {\n\n      if (this.cardAnimation) {\n        this.cardAnimation.stop();\n        this.cardAnimation = null;\n      }\n\n      currentIndex[this.guid] = 0;\n      this.setState({\n        cards: [].concat(nextProps.cards),\n        card: nextProps.cards[0]\n      });\n    }\n  }\n\n  _resetPan() {\n    Animated.spring(this.state.pan, {\n      toValue: { x: 0, y: 0 },\n      friction: 4\n    }).start();\n  }\n\n  _resetState() {\n    this.state.pan.setValue({ x: 0, y: 0 });\n    this.state.enter.setValue(0);\n    this._animateEntrance();\n  }\n\n  _advanceState() {\n    this.state.pan.setValue({ x: 0, y: 0 });\n    this.state.enter.setValue(0);\n    this._animateEntrance();\n    this._goToNextCard();\n  }\n\n  /**\n   * Returns current card object\n   */\n  getCurrentCard() {\n      return this.state.cards[currentIndex[this.guid]];\n  }\n\n  renderNoMoreCards() {\n    if (this.props.renderNoMoreCards) {\n      return this.props.renderNoMoreCards();\n    }\n\n    return <Defaults.NoMoreCards />;\n  }\n\n  /**\n   * Renders the cards as a stack with props.stackDepth cards deep.\n   */\n  renderStack() {\n    if (!this.state.card) {\n      return this.renderNoMoreCards();\n    }\n\n    //Get the next stack of cards to render.\n    let cards = this.state.cards.slice(currentIndex[this.guid], currentIndex[this.guid] + this.props.stackDepth).reverse();\n\n    return cards.map((card, i) => {\n\n      let offsetX = this.props.stackOffsetX * cards.length - i * this.props.stackOffsetX;\n      let lastOffsetX = offsetX + this.props.stackOffsetX;\n\n      let offsetY = this.props.stackOffsetY * cards.length - i * this.props.stackOffsetY;\n      let lastOffsetY = offsetY + this.props.stackOffsetY;\n\n      let opacity = 0.25 + (0.75 / cards.length) * (i + 1);\n      let lastOpacity = 0.25 + (0.75 / cards.length) * i;\n\n      let scale = 0.85 + (0.15 / cards.length) * (i + 1);\n      let lastScale = 0.85 + (0.15 / cards.length) * i;\n\n      let style = {\n        position: 'absolute',\n        top: this.state.enter.interpolate({ inputRange: [0, 1], outputRange: [lastOffsetY, offsetY] }),\n        left: this.state.enter.interpolate({ inputRange: [0, 1], outputRange: [lastOffsetX, offsetX] }),\n        opacity: this.props.smoothTransition ? 1 : this.state.enter.interpolate({ inputRange: [0, 1], outputRange: [lastOpacity, opacity] }),\n        transform: [{ scale: this.state.enter.interpolate({ inputRange: [0, 1], outputRange: [lastScale, scale] }) }],\n        elevation: i * 10\n      };\n\n      //Is this the top card?  If so animate it and hook up the pan handlers.\n      if (i + 1 === cards.length) {\n        let {pan} = this.state;\n        let [translateX, translateY] = [pan.x, pan.y];\n\n        let rotate = pan.x.interpolate({ inputRange: [-200, 0, 200], outputRange: [\"-30deg\", \"0deg\", \"30deg\"] });\n        let opacity = this.props.smoothTransition ? 1 : pan.x.interpolate({ inputRange: [-200, 0, 200], outputRange: [0.5, 1, 0.5] });\n\n        let animatedCardStyles = {\n          ...style,\n          transform: [\n            { translateX: translateX },\n            { translateY: translateY },\n            { rotate: rotate },\n            { scale: this.state.enter.interpolate({ inputRange: [0, 1], outputRange: [lastScale, scale] }) }\n          ]\n        };\n\n        return <Animated.View key={card[this.props.cardKey]} style={[styles.card, animatedCardStyles]} {... this._panResponder.panHandlers}>\n          {this.props.renderCard(this.state.card)}\n        </Animated.View>;\n      }\n\n      return <Animated.View key={card[this.props.cardKey]} style={style}>{this.props.renderCard(card)}</Animated.View>;\n    });\n  }\n\n  renderCard() {\n    if (!this.state.card) {\n      return this.renderNoMoreCards();\n    }\n\n    let {pan, enter} = this.state;\n    let [translateX, translateY] = [pan.x, pan.y];\n\n    let rotate = pan.x.interpolate({ inputRange: [-200, 0, 200], outputRange: [\"-30deg\", \"0deg\", \"30deg\"] });\n    let opacity = pan.x.interpolate({ inputRange: [-200, 0, 200], outputRange: [0.5, 1, 0.5] });\n\n    let scale = enter;\n\n    let animatedCardStyles = { transform: [{ translateX }, { translateY }, { rotate }, { scale }], opacity };\n\n    return <Animated.View key={\"top\"} style={[styles.card, animatedCardStyles]} {... this._panResponder.panHandlers}>\n      {this.props.renderCard(this.state.card)}\n    </Animated.View>;\n  }\n\n  renderNope() {\n    let {pan} = this.state;\n\n    let nopeOpacity = pan.x.interpolate({ inputRange: [-SWIPE_THRESHOLD, -(SWIPE_THRESHOLD/2)], outputRange: [1, 0], extrapolate: 'clamp' });\n    let nopeScale = pan.x.interpolate({ inputRange: [-SWIPE_THRESHOLD, 0], outputRange: [1, 0], extrapolate: 'clamp' });\n    let animatedNopeStyles = { transform: [{ scale: nopeScale }], opacity: nopeOpacity };\n\n    if (this.props.renderNope) {\n      return this.props.renderNope(pan);\n    }\n\n    if (this.props.showNope) {\n\n      const inner = this.props.noView\n        ? this.props.noView\n        : <Text style={[styles.nopeText, this.props.nopeTextStyle]}>{this.props.nopeText}</Text>\n\n      return <Animated.View style={[styles.nope, this.props.nopeStyle, animatedNopeStyles]}>\n                {inner}\n              </Animated.View>;\n    }\n\n    return null;\n  }\n\n  renderMaybe() {\n    if (!this.props.hasMaybeAction) return null;\n\n    let {pan} = this.state;\n\n    let maybeOpacity = pan.y.interpolate({ inputRange: [-SWIPE_THRESHOLD, -(SWIPE_THRESHOLD/2)], outputRange: [1, 0], extrapolate: 'clamp' });\n    let maybeScale = pan.x.interpolate({ inputRange: [-SWIPE_THRESHOLD, 0, SWIPE_THRESHOLD], outputRange: [0, 1, 0], extrapolate: 'clamp' });\n    let animatedMaybeStyles = { transform: [{ scale: maybeScale }], opacity: maybeOpacity };\n\n    if (this.props.renderMaybe) {\n      return this.props.renderMaybe(pan);\n    }\n\n\n    if (this.props.showMaybe) {\n\n      const inner = this.props.maybeView\n        ? this.props.maybeView\n        : <Text style={[styles.maybeText, this.props.maybeTextStyle]}>{this.props.maybeText}</Text>\n\n      return <Animated.View style={[styles.maybe, this.props.maybeStyle, animatedMaybeStyles]}>\n                {inner}\n              </Animated.View>;\n    }\n\n    return null;\n  }\n\n  renderYup() {\n    let {pan} = this.state;\n\n    let yupOpacity = pan.x.interpolate({ inputRange: [(SWIPE_THRESHOLD/2), SWIPE_THRESHOLD], outputRange: [0, 1], extrapolate: 'clamp' });\n    let yupScale = pan.x.interpolate({ inputRange: [0, SWIPE_THRESHOLD], outputRange: [0.5, 1], extrapolate: 'clamp' });\n    let animatedYupStyles = { transform: [{ scale: yupScale }], opacity: yupOpacity };\n\n    if (this.props.renderYup) {\n      return this.props.renderYup(pan);\n    }\n\n    if (this.props.showYup) {\n\n      const inner = this.props.yupView\n        ? this.props.yupView\n        : <Text style={[styles.yupText, this.props.yupTextStyle]}>{this.props.yupText}</Text>;\n\n        return <Animated.View style={[styles.yup, this.props.yupStyle, animatedYupStyles]}>\n                {inner}\n              </Animated.View>;\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        {this.props.stack ? this.renderStack() : this.renderCard()}\n        {this.renderNope()}\n        {this.renderMaybe()}\n        {this.renderYup()}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}