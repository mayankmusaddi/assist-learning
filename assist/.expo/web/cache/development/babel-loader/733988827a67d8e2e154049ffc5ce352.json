{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/SwipeCards.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SERVER_URL from \"./url.js\";\nimport SwipeCards from \"react-native-swipe-cards\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.card, {\n          backgroundColor: this.props.backgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, this.props.text));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nvar NoMoreCards = function (_Component) {\n  _inherits(NoMoreCards, _Component);\n\n  var _super2 = _createSuper(NoMoreCards);\n\n  function NoMoreCards(props) {\n    _classCallCheck(this, NoMoreCards);\n\n    return _super2.call(this, props);\n  }\n\n  _createClass(NoMoreCards, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.noMoreCardsText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, \"Great! You have finished all the Questions\"));\n    }\n  }]);\n\n  return NoMoreCards;\n}(Component);\n\nvar cards = [{\n  text: \"What is a chronotype?\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"What are the two extremes with most individuals having some flexibility in the timing of their sleep period?\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"what is a notable environmental cue?\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"What is a factor that might be important in determining a person's chronotype?\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"What are the circadian rhythms?\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"What is the main thing that humans do during the day?\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"What are clock genes called?\",\n  backgroundColor: \"cyan\"\n}];\n\nvar _default = function (_React$Component2) {\n  _inherits(_default, _React$Component2);\n\n  var _super3 = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super3.call(this, props);\n    _this.state = {\n      cards: cards,\n      score: \"0\",\n      squashId: null,\n      settings: {\n        top_p: 0.9,\n        gen_frac: 0.5,\n        spec_frac: 0.5\n      },\n      ans_mode: \"original\",\n      forest: null,\n      queue_number: null,\n      input_text: null,\n      status: null,\n      expanded: null,\n      dropdownOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"getSquashedDocument\",\n    value: function getSquashedDocument() {\n      if (this.state.squashId) {\n        var url = SERVER_URL + \"/get_squash_doc?id=\" + this.state.squashId;\n        console.log(this.state.squashId);\n        fetch(url).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          console.log(result);\n        }, function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"squashDoc\",\n    value: function squashDoc() {\n      var _this2 = this;\n\n      var url = SERVER_URL + \"/request_squash_doc\";\n      var flags = {\n        method: \"POST\",\n        body: JSON.stringify({\n          settings: this.state.settings,\n          input_text: document.getElementById(\"squashInputText\").value\n        })\n      };\n      fetch(url, flags).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        window.location.href = \"/?id=\" + result.new_id;\n\n        _this2.setState({\n          squashId: result.new_id\n        });\n\n        _this2.getSquashedDocument.bind(_this2)();\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"handleYup\",\n    value: function handleYup(card) {\n      this.setState({\n        score: this.state.score + 1\n      });\n      console.log(\"\" + this.state.score);\n      console.log(\"Yup for \" + card.text);\n    }\n  }, {\n    key: \"handleNope\",\n    value: function handleNope(card) {\n      this.setState({\n        score: this.state.score - 1\n      });\n      console.log(\"Nope for \" + card.text);\n    }\n  }, {\n    key: \"handleMaybe\",\n    value: function handleMaybe(card) {\n      console.log(\"Maybe for \" + card.text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, React.createElement(SwipeCards, {\n        cards: this.state.cards,\n        renderCard: function renderCard(cardData) {\n          return React.createElement(Card, _extends({}, cardData, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }\n          }));\n        },\n        renderNoMoreCards: function renderNoMoreCards() {\n          return React.createElement(NoMoreCards, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 36\n            }\n          });\n        },\n        handleYup: this.handleYup.bind(this),\n        handleNope: this.handleNope.bind(this),\n        handleMaybe: this.handleMaybe.bind(this),\n        hasMaybeAction: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, \"SCORE IS \", this.state.score));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 300,\n    height: 300\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  score: {\n    paddingTop: 10,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/SwipeCards.js"],"names":["React","Component","SERVER_URL","SwipeCards","Card","props","styles","card","backgroundColor","text","NoMoreCards","noMoreCardsText","cards","state","score","squashId","settings","top_p","gen_frac","spec_frac","ans_mode","forest","queue_number","input_text","status","expanded","dropdownOpen","url","console","log","fetch","then","res","json","result","error","flags","method","body","JSON","stringify","document","getElementById","value","window","location","href","new_id","setState","getSquashedDocument","bind","container","cardData","handleYup","handleNope","handleMaybe","StyleSheet","create","paddingTop","flex","alignItems","justifyContent","width","height","fontSize","textAlign","marginTop"],"mappings":"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","sourcesContent":["// SwipeCards.js\n\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport SERVER_URL from \"./url.js\";\n\nimport SwipeCards from \"react-native-swipe-cards\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View\n        style={[styles.card, { backgroundColor: this.props.backgroundColor }]}\n      >\n        <Text>{this.props.text}</Text>\n      </View>\n    );\n  }\n}\n\nclass NoMoreCards extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View>\n        <Text style={styles.noMoreCardsText}>\n          Great! You have finished all the Questions\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst cards = [\n  { text: \"What is a chronotype?\", backgroundColor: \"cyan\" },\n  {\n    text:\n      \"What are the two extremes with most individuals having some flexibility in the timing of their sleep period?\",\n    backgroundColor: \"cyan\",\n  },\n  { text: \"what is a notable environmental cue?\", backgroundColor: \"cyan\" },\n  {\n    text:\n      \"What is a factor that might be important in determining a person's chronotype?\",\n    backgroundColor: \"cyan\",\n  },\n  { text: \"What are the circadian rhythms?\", backgroundColor: \"cyan\" },\n  {\n    text: \"What is the main thing that humans do during the day?\",\n    backgroundColor: \"cyan\",\n  },\n  { text: \"What are clock genes called?\", backgroundColor: \"cyan\" },\n];\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // const urlParams = new URLSearchParams(window.location.search);\n    // const squashId = urlParams.get(\"id\");\n\n    this.state = {\n      cards: cards,\n      score: \"0\",\n\n      squashId: null,\n      settings: {\n        top_p: 0.9,\n        gen_frac: 0.5,\n        spec_frac: 0.5,\n      },\n      ans_mode: \"original\",\n      forest: null,\n      queue_number: null,\n      input_text: null,\n      status: null,\n      expanded: null,\n      dropdownOpen: false,\n    };\n  }\n\n  getSquashedDocument() {\n    if (this.state.squashId) {\n      var url = SERVER_URL + \"/get_squash_doc?id=\" + this.state.squashId;\n      console.log(this.state.squashId);\n\n      fetch(url)\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            console.log(result);\n            // if (result.input_text) {\n            //   document.getElementById(\"squashInputText\").value =\n            //     result.input_text;\n            // }\n            // var expanded = null;\n            // if (result.squash_data != null) {\n            //   expanded = result.squash_data.qa_tree.map((para, para_index) =>\n            //     para.binned_qas.map((qa_tree, qa_index) => false)\n            //   );\n            // }\n            // this.setState({\n            //   forest: result.squash_data,\n            //   queue_number: result.queue_number,\n            //   settings: {\n            //     top_p: result.settings.top_p,\n            //     gen_frac: result.settings.gen_frac,\n            //     spec_frac: result.settings.spec_frac,\n            //   },\n            //   status: result.status,\n            //   expanded: expanded,\n            // });\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  }\n\n  squashDoc() {\n    var url = SERVER_URL + \"/request_squash_doc\";\n    var flags = {\n      method: \"POST\",\n      body: JSON.stringify({\n        settings: this.state.settings,\n        input_text: document.getElementById(\"squashInputText\").value,\n      }),\n    };\n    fetch(url, flags)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          window.location.href = \"/?id=\" + result.new_id;\n          this.setState({ squashId: result.new_id });\n          this.getSquashedDocument.bind(this)();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  handleYup(card) {\n    this.setState({ score: this.state.score + 1 });\n    // this.state.score += 1;\n    console.log(`${this.state.score}`);\n    console.log(`Yup for ${card.text}`);\n  }\n  handleNope(card) {\n    this.setState({ score: this.state.score - 1 });\n    // this.state.score -= 1;\n    console.log(`Nope for ${card.text}`);\n  }\n  handleMaybe(card) {\n    console.log(`Maybe for ${card.text}`);\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <SwipeCards\n          cards={this.state.cards}\n          renderCard={(cardData) => <Card {...cardData} />}\n          renderNoMoreCards={() => <NoMoreCards />}\n          handleYup={this.handleYup.bind(this)}\n          handleNope={this.handleNope.bind(this)}\n          handleMaybe={this.handleMaybe.bind(this)}\n          hasMaybeAction\n        />\n        <Text style={styles.score}>SCORE IS {this.state.score}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 300,\n    height: 300,\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  score: {\n    paddingTop: 10,\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}