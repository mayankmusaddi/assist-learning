{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/TopicGraph.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar buttonClickedHandler = function buttonClickedHandler() {\n  console.log('You have been clicked a button!');\n};\n\nvar TopicGraph = function (_React$Component) {\n  _inherits(TopicGraph, _React$Component);\n\n  var _super = _createSuper(TopicGraph);\n\n  function TopicGraph() {\n    _classCallCheck(this, TopicGraph);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TopicGraph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 5\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, \"Cell\")), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        activeOpacity: 1,\n        underlayColor: \"blue\",\n        onPress: function onPress() {\n          return alert('Pressed!');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"History\"))), React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Structure\")), React.createElement(TouchableOpacity, {\n        onPress: buttonClickedHandler,\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"Functions\"))));\n    }\n  }]);\n\n  return TopicGraph;\n}(React.Component);\n\nexport { TopicGraph as default };\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  roundButton1: {\n    width: 150,\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n    backgroundColor: 'orange'\n  },\n  roundButton2: {\n    marginTop: 20,\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    margin: 10,\n    borderRadius: 100,\n    backgroundColor: '#ccc'\n  },\n  btnNormal: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 30,\n    width: 100\n  },\n  btnPress: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    height: 30,\n    width: 100\n  }\n});","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/TopicGraph.js"],"names":["React","buttonClickedHandler","console","log","TopicGraph","styles","screen","roundButton1","flexDirection","alert","roundButton2","Component","StyleSheet","create","flex","justifyContent","alignItems","width","height","padding","borderRadius","backgroundColor","marginTop","margin","btnNormal","borderColor","borderWidth","btnPress"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity, TouchableHighlight} from 'react-native';\n\nconst buttonClickedHandler = () => {\n  console.log('You have been clicked a button!');\n  // do something\n};\n\nexport default class TopicGraph extends React.Component {\n  render() {\n    return (\n    <View style={styles.screen}>\n      <TouchableOpacity\n        onPress={buttonClickedHandler}\n        style={styles.roundButton1}>\n        <Text>Cell</Text>\n      </TouchableOpacity>\n\n      <View style={{flexDirection:\"row\"}}>\n        <TouchableHighlight\n          activeOpacity={1}\n          underlayColor=\"blue\"\n          onPress={() => alert('Pressed!')}>\n          <TouchableOpacity\n            // onPress={buttonClickedHandler}\n            style={styles.roundButton2}>\n            <Text>History</Text>\n          </TouchableOpacity>\n        </TouchableHighlight>\n\n        <TouchableOpacity\n          onPress={buttonClickedHandler}\n          style={styles.roundButton2}>\n          <Text>Structure</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPress={buttonClickedHandler}\n          style={styles.roundButton2}>\n          <Text>Functions</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n  }\n}\n\n/// Just some styles\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  roundButton1: {\n    width: 150,\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n    backgroundColor: 'orange',\n  },\n  roundButton2: {\n    marginTop: 20,\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    margin: 10,\n    borderRadius: 100,\n    backgroundColor: '#ccc',\n  },\n  btnNormal: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 30,\n    width: 100,\n  },\n  btnPress: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    height: 30,\n    width: 100,\n  }\n});"]},"metadata":{},"sourceType":"module"}