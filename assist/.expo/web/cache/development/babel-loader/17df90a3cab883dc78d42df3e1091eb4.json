{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mayank/Study/TPE/h1/assist-learning/assist/input.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport SERVER_URL from \"./url.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Inputs = function (_Component) {\n  _inherits(Inputs, _Component);\n\n  var _super = _createSuper(Inputs);\n\n  function Inputs(props) {\n    var _this;\n\n    _classCallCheck(this, Inputs);\n\n    _this = _super.call(this, props);\n\n    _this.handleText = function (text) {\n      _this.setState({\n        text: text\n      });\n    };\n\n    _this.submit = function (text) {\n      _this.props.navigation.navigate(\"Questions\");\n    };\n\n    _this.state = {\n      text: \"\",\n      squashId: null,\n      settings: {\n        top_p: 0.9,\n        gen_frac: 0.5,\n        spec_frac: 0.5\n      },\n      ans_mode: \"original\",\n      forest: null,\n      queue_number: null,\n      input_text: null,\n      status: null,\n      expanded: null,\n      dropdownOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Inputs, [{\n    key: \"getSquashedDocument\",\n    value: function getSquashedDocument() {\n      if (this.state.squashId) {\n        var url = SERVER_URL + \"/get_squash_doc?id=\" + this.state.squashId;\n        console.log(this.state.squashId);\n        fetch(url).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          console.log(result);\n        }, function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"squashDoc\",\n    value: function squashDoc(text) {\n      var _this2 = this;\n\n      var url = SERVER_URL + \"/request_squash_doc\";\n      var flags = {\n        method: \"POST\",\n        body: JSON.stringify({\n          settings: this.state.settings,\n          input_text: text\n        })\n      };\n      fetch(url, flags).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result.new_id);\n\n        _this2.setState({\n          squashId: result.new_id\n        });\n\n        _this2.getSquashedDocument.bind(_this2)();\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Paste your content here!\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        multiline: true,\n        onChangeText: this.handleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this3.submit(_this3.state.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \" Submit \")));\n    }\n  }]);\n\n  return Inputs;\n}(Component);\n\nexport default Inputs;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    textAlign: \"center\",\n    padding: 30,\n    margin: 15,\n    height: 300,\n    width: 300,\n    borderColor: \"#7a42f4\",\n    borderWidth: 1\n  },\n  submitButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#7a42f4\",\n    padding: 10,\n    margin: 15,\n    height: 40,\n    alignSelf: \"center\",\n    width: 80\n  },\n  submitButtonText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/home/mayank/Study/TPE/h1/assist-learning/assist/input.js"],"names":["React","Component","SERVER_URL","Inputs","props","handleText","text","setState","submit","navigation","navigate","state","squashId","settings","top_p","gen_frac","spec_frac","ans_mode","forest","queue_number","input_text","status","expanded","dropdownOpen","url","console","log","fetch","then","res","json","result","error","flags","method","body","JSON","stringify","new_id","getSquashedDocument","bind","styles","container","input","submitButton","submitButtonText","StyleSheet","create","paddingTop","flex","backgroundColor","alignItems","justifyContent","textAlign","padding","margin","height","width","borderColor","borderWidth","alignSelf","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SERVER_URL from \"./url.js\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  StyleSheet,\n} from \"react-native\";\n\nclass Inputs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n\n      squashId: null,\n      settings: {\n        top_p: 0.9,\n        gen_frac: 0.5,\n        spec_frac: 0.5,\n      },\n      ans_mode: \"original\",\n      forest: null,\n      queue_number: null,\n      input_text: null,\n      status: null,\n      expanded: null,\n      dropdownOpen: false,\n    };\n  }\n\n  handleText = (text) => {\n    this.setState({ text: text });\n  };\n\n  getSquashedDocument() {\n    if (this.state.squashId) {\n      var url = SERVER_URL + \"/get_squash_doc?id=\" + this.state.squashId;\n      console.log(this.state.squashId);\n\n      fetch(url)\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            console.log(result);\n            // if (result.input_text) {\n            //   document.getElementById(\"squashInputText\").value =\n            //     result.input_text;\n            // }\n            // var expanded = null;\n            // if (result.squash_data != null) {\n            //   expanded = result.squash_data.qa_tree.map((para, para_index) =>\n            //     para.binned_qas.map((qa_tree, qa_index) => false)\n            //   );\n            // }\n            // this.setState({\n            //   forest: result.squash_data,\n            //   queue_number: result.queue_number,\n            //   settings: {\n            //     top_p: result.settings.top_p,\n            //     gen_frac: result.settings.gen_frac,\n            //     spec_frac: result.settings.spec_frac,\n            //   },\n            //   status: result.status,\n            //   expanded: expanded,\n            // });\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  }\n\n  squashDoc(text) {\n    var url = SERVER_URL + \"/request_squash_doc\";\n    var flags = {\n      method: \"POST\",\n      body: JSON.stringify({\n        settings: this.state.settings,\n        input_text: text,\n      }),\n    };\n    fetch(url, flags)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          //   window.location.href = \"/?id=\" + result.new_id;\n          console.log(result.new_id);\n          this.setState({ squashId: result.new_id });\n          this.getSquashedDocument.bind(this)();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  submit = (text) => {\n    // this.squashDoc(text);\n    this.props.navigation.navigate(\"Questions\");\n  };\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          underlineColorAndroid=\"transparent\"\n          placeholder=\"Paste your content here!\"\n          placeholderTextColor=\"#9a73ef\"\n          autoCapitalize=\"none\"\n          multiline={true}\n          onChangeText={this.handleText}\n        />\n\n        <TouchableOpacity\n          style={styles.submitButton}\n          onPress={() => this.submit(this.state.text)}\n        >\n          <Text style={styles.submitButtonText}> Submit </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\nexport default Inputs;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  input: {\n    textAlign: \"center\",\n    padding: 30,\n    margin: 15,\n    height: 300,\n    width: 300,\n    borderColor: \"#7a42f4\",\n    borderWidth: 1,\n  },\n  submitButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#7a42f4\",\n    padding: 10,\n    margin: 15,\n    height: 40,\n    alignSelf: \"center\",\n    width: 80,\n  },\n  submitButtonText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}